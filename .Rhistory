head(seePhaseTimeSec)
colnames(seePhase2)
colnames(seePhaseTimeSec)
names(seePhaseTimeSec)
colnames(seePhaseTimeSec) <- paste(Elapsed)
colnames(seePhaseTimeSec) <- paste("Elapsed")
colnames(seePhaseTimeSec)
seePhaseTimeSec <- (seePhase[1] - seePhase[1,1])*24*60*60
seePhaseTimeSec <- (seePhase[1] - seePhase[1,1])*24*60*60
colnames(seePhaseTimeSec) <- paste("Elapsed")
seePhase2 <- cbind(seePhase, seePhaseTimeSec)
seePhase2
head(seePhase2)
# read in the SeePhase data (as a list) (PMD)
source(".First.R")
pathPrep()
seePhase <- read.csv("S:/R&D Docs/R&D Shared/3250 NASA NIOGS II/Data/PATCHCAL_RH/PATCHCAL_RH_160219T02/prc02_19_2016___05_57_41PM.csv")
plotId <- paste("plot name")
plot <- ggplot(seePhase, aes_string("X", "Ph1")) +
geom_line() +
ggtitle(plotId)
print(plot)
newdata <- subset(seePhase, Analog >= 2 & Analog <= 6)
head(newdata)
# Use this code to convert to elapsed time
seePhaseTimeSec <- (newdata[1] - newdata[1,1])*24*60*60
colnames(seePhaseTimeSec) <- paste("ElapsedSec")
seePhase2 <- cbind(newdata, seePhaseTimeSec)
plotId <- paste("plot name")
plot <- ggplot(newdata, aes_string("X", "Ph1")) +
geom_line() +
ggtitle(plotId)
print(plot)
# read in the SeePhase data (as a list) (PMD)
source(".First.R")
library(ggplot2)
pathPrep()
seePhase <- read.csv("S:/R&D Docs/R&D Shared/3250 NASA NIOGS II/Data/PATCHCAL_RH/PATCHCAL_RH_160219T02/prc02_19_2016___05_57_41PM.csv")
plotId <- paste("plot name")
plot <- ggplot(seePhase, aes_string("X", "Ph1")) +
geom_line() +
ggtitle(plotId)
print(plot)
newdata <- subset(seePhase, Analog >= 2 & Analog <= 6)
head(newdata)
# Use this code to convert to elapsed time
seePhaseTimeSec <- (newdata[1] - newdata[1,1])*24*60*60
colnames(seePhaseTimeSec) <- paste("ElapsedSec")
seePhase2 <- cbind(newdata, seePhaseTimeSec)
plotId <- paste("plot name")
plot <- ggplot(newdata, aes_string("X", "Ph1")) +
geom_line() +
ggtitle(plotId)
print(plot)
plotId <- paste("plot name")
plot <- ggplot(seePhase2, aes_string("X", "Ph1")) +
geom_line() +
ggtitle(plotId)
print(plot)
plotId <- paste("plot name")
plot <- ggplot(seePhase2, aes_string("ElapsedSec", "Ph1")) +
geom_line() +
ggtitle(plotId)
print(plot)
# read in the SeePhase data (as a list) (PMD)
source(".First.R")
library(ggplot2)
pathPrep()
seePhase <- read.csv("S:/R&D Docs/R&D Shared/3250 NASA NIOGS II/Data/PATCHCAL_RH/PATCHCAL_RH_160219T02/prc02_19_2016___05_57_41PM.csv")
plotId <- paste("plot name")
plot <- ggplot(seePhase, aes_string("X", "Ph1")) +
geom_line() +
ggtitle(plotId)
print(plot)
newdata <- subset(seePhase, Analog >= 2 & Analog <= 6)
head(newdata)
# Use this code to convert to elapsed time, in minutes
seePhaseTimeSec <- (newdata[1] - newdata[1,1])*24*60
colnames(seePhaseTimeSec) <- paste("ElapsedMin")
seePhase2 <- cbind(newdata, seePhaseTimeSec)
plotId <- paste("plot name")
plot <- ggplot(seePhase2, aes_string("ElapsedMin", "Ph1")) +
geom_line() +
ggtitle(plotId)
print(plot)
# read in the SeePhase data (as a list) (PMD)
source(".First.R")
library(ggplot2)
pathPrep()
seePhase <- read.csv("S:/R&D Docs/R&D Shared/3250 NASA NIOGS II/Data/PATCHCAL_RH/PATCHCAL_RH_160219T02/prc02_19_2016___05_57_41PM.csv")
plotId <- paste("plot name")
plot <- ggplot(seePhase, aes_string("X", "Ph1")) +
geom_line() +
ggtitle(plotId)
print(plot)
newdata <- subset(seePhase, Analog >= 2 & Analog <= 6)
head(newdata)
# Use this code to convert to elapsed time, in minutes
seePhaseTimeSec <- (newdata[1] - newdata[1,1])*24*60
colnames(seePhaseTimeSec) <- paste("ElapsedMin")
seePhase2 <- cbind(newdata, seePhaseTimeSec)
plotId <- paste("plot name")
plot <- ggplot(seePhase2, aes_string("ElapsedMin", "Ph1")) +
geom_line() +
ggtitle(plotId)
print(plot)
T1.data <- subset(seePhase, Analog >= 2 & Analog <= 6)
head(T1.data)
T2.data <- subset(seePhase, Analog >= 7 & Analog <= 10)
head(T2.data)
# Use this code to convert to elapsed time, in minutes
TimeSec <- (T1.data[1] - T1.data[1,1])*24*60
colnames(TimeSec) <- paste("ElapsedMin")
T1.data2 <- cbind(T1.data, TimeMin)
TimeSec <- (T2.data[1] - T2.data[1,1])*24*60
colnames(TimeSec) <- paste("ElapsedMin")
T2.data2 <- cbind(T2.data, TimeMin)
head(T1.data1)
head(T1.data2)
T1.data <- subset(seePhase, Analog >= 2 & Analog <= 6)
head(T1.data)
T2.data <- subset(seePhase, Analog >= 7 & Analog <= 10)
head(T2.data)
# Use this code to convert to elapsed time, in minutes
TimeSec <- (T1.data[1] - T1.data[1,1])*24*60
colnames(TimeSec) <- paste("ElapsedMin")
T1.data2 <- cbind(T1.data, TimeMin)
TimeSec <- (T2.data[1] - T2.data[1,1])*24*60
colnames(TimeSec) <- paste("ElapsedMin")
T2.data2 <- cbind(T2.data, TimeMin)
head(T1.data2)
head(T2.data2)
T1.data <- subset(seePhase, Analog >= 2 & Analog <= 6)
head(T1.data)
T2.data <- subset(seePhase, Analog >= 7 & Analog <= 10)
head(T2.data)
# Use this code to convert to elapsed time, in minutes
TimeMin <- (T1.data[1] - T1.data[1,1])*24*60
colnames(TimeMin) <- paste("ElapsedMin")
T1.data2 <- cbind(T1.data, TimeMin)
TimeMin <- (T2.data[1] - T2.data[1,1])*24*60
colnames(TimeMin) <- paste("ElapsedMin")
T2.data2 <- cbind(T2.data, TimeMin)
head(T1.data2)
head(T2.data2)
plotId <- paste("plot name")
plot <- ggplot(seePhase2, aes_string("ElapsedMin", "Ph1")) +
geom_line() +
ggtitle(plotId)
print(plot)
plotId <- paste("plot name")
plot <- ggplot(T1.data2, aes_string("ElapsedMin", "Ph1")) +
geom_line() +
ggtitle(plotId)
print(plot)
plotId <- paste("ss name")
plot <- ggplot(T1.data2, aes_string("ElapsedMin", "Ph1")) +
geom_line() +
ggtitle(plotId)
print(plot)
plotId <- paste("T1 name")
plot <- ggplot(T1.data2, aes_string("ElapsedMin", "Ph1")) +
geom_line() +
ggtitle(plotId)
print(plot)
plotId <- paste("T2 name")
plot <- ggplot(T2.data2, aes_string("ElapsedMin", "Ph1")) +
geom_line() +
ggtitle(plotId)
print(plot)
plotId <- paste("T1 name")
plot <- ggplot(T1.data2, aes_string("ElapsedMin", "Ph1")) +
geom_line() +
geom_line(T2.data2, aes_string("ElapsedMin", "Ph1")
ggtitle(plotId)
print(plot)
plotId <- paste("T1 name")
plot <- ggplot(NULL, aes_string("ElapsedMin", "Ph1")) +
geom_line(data = T1.data2) +
geom_line(data = T2.data2)
ggtitle(plotId)
print(plot)
plotId <- paste("T1 name")
plot <- ggplot(NULL, aes_string("ElapsedMin", "Ph1")) +
geom_line(data = T1.data2) +
geom_line(data = T2.data2, colour = "red")
ggtitle(plotId)
print(plot)
colours <- c("red", "blue", "green")
plotId <- paste("T1 name")
plot <- ggplot(NULL, aes_string("ElapsedMin", "Ph1")) +
geom_line(data = T1.data2, colour = colours[1]) +
geom_line(data = T2.data2, colour = colours[2])
ggtitle(plotId)
print(plot)
source(".First.R")
setwd("~/GitHub/SeePhase Script Test Folder")
source(".First.R")
library(ggplot2)
pathPrep()
seePhase <- read.csv("\"C:/Users/pdicarmine/Documents/GitHub/SeePhase Script Test Folder/prc02_19_2016___05_57_41PM.csv\"")
seePhase <- read.csv("C:/Users/pdicarmine/Documents/GitHub/SeePhase Script Test Folder/prc02_19_2016___05_57_41PM.csv")
head(seePhase)
plotId <- paste("SeePhase Time Series")
plot <- ggplot(seePhase, aes_string("X", "Ph1")) +
geom_line() +
ggtitle(plotId)
print(plot)
plotId <- paste("SeePhase Time Series")
plot <- ggplot(seePhase, aes_string("X", "Ph1")) +
geom_line() +
geom_line(aes_string("X", "Analog"))
ggtitle(plotId)
print(plot)
par(mar = c(5,5,2,5))
with(d, plot(x, logp, type="l", col="red3",
ylab=expression(-log[10](italic(p))),
ylim=c(0,3)))
par(mar = c(5,5,2,5))
with(seePhase, plot(X, Ph1, type="l", col="red3",
ylab=expression(-log[10](italic(p))),
ylim=c(0,3)))
par(mar = c(5,5,2,5))
with(seePhase, plot(X, Ph1, type="l", col="red3",
ylab=expression(-log[10](italic(p))),
ylim=c(0,3)))
par(mar = c(5,5,2,5))
with(seePhase, plot(X, Ph1, type="l", col="red3",
ylab= Ph1),
ylim=c(0,100)))
par(mar = c(5,5,2,5))
with(seePhase, plot(X, Ph1, type="l", col="red3",
ylab= (Ph1),
ylim=c(0,100))
par(mar = c(5,5,2,5))
with(seePhase, plot(X, Ph1, type="l", col="red3",
ylab= Ph1,
ylim=c(0,100))
with(seePhase, plot(X, Ph1, type="l", col="red3", ylab= Ph1, ylim=c(0,100))
par(mar = c(5,5,2,5))
with(seePhase, plot(X, Ph1, type="l", col="red3", ylab= Ph1, ylim=c(0,100))
d = data.frame(x =seq(1,10),
n = c(0,0,1,2,3,4,4,5,6,6),
logp = signif(-log10(runif(10)), 2))
set.seed(2015-04-13)
d = data.frame(x =seq(1,10),
n = c(0,0,1,2,3,4,4,5,6,6),
logp = signif(-log10(runif(10)), 2))
par(mar = c(5,5,2,5))
with(d, plot(x, logp, type="l", col="red3",
ylab=expression(-log[10](italic(p))),
ylim=c(0,3)))
?par
seePhase <- read.csv("C:/Users/pdicarmine/Documents/GitHub/SeePhase Script Test Folder/prc02_19_2016___05_57_41PM.csv")
with(seePhase, plot(x, Ph1, type="l", col="red3")
plot(seePhase, x, Ph1)
source('~/.active-rstudio-document', echo=TRUE)
plot(seePhase, X, Ph1)
with(seePhase, plot(X, Ph1)
with(seePhase, plot(X, Ph1))
with(seePhase, plot(X, Ph1))
with(seePhase, plot(X, Ph1, type = "l", col = "red3"))
par(mar = c(5,5,2,5))
with(seePhase, plot(X, Ph1, type = "l", col = "red3"))
par(mar = c(1,5,2,5))
with(seePhase, plot(X, Ph1, type = "l", col = "red3"))
par(mar = c(5,5,2,5))
with(seePhase, plot(X, Ph1, type = "l", col = "red3"))
with(seePhase, plot(X, Ph1, type = "l", col = "red3"))
par(new = T)
with(seePhase, plot(X, Analog, pch=16, axes=F, xlab=NA, ylab=NA, cex=1.2))
axis(side = 4)
mtext(side = 4, line = 3, 'Number genes selected')
par(mar = c(5,5,2,5))
par(mar = c(5,5,2,5))
with(seePhase, plot(X, Ph1, type = "l", col = "red3"))
par(new = T)
with(seePhase, plot(X, Analog, pch=1, axes=F, xlab=NA, ylab=NA, cex=1.2))
axis(side = 4)
mtext(side = 4, line = 3, 'Number genes selected')
par(mar = c(5,5,2,5))
with(seePhase, plot(X, Ph1, type = "l", col = "red3"))
par(new = T)
with(seePhase, plot(X, Analog, type = "l", axes=F, xlab=NA, ylab=NA, cex=1.2))
axis(side = 4)
mtext(side = 4, line = 3, 'Number genes selected')
ylab2 <- "Analog"
par(mar = c(5,5,2,5))
with(seePhase, plot(X, Ph1, type = "l", col = "red3"))
par(new = T)
with(seePhase, plot(X, Analog, type = "l", axes=F, xlab=NA, ylab=NA, cex=1.2))
axis(side = 4)
mtext(side = 4, line = 3, ylab2)
seePhase <- read.csv("C:/Users/pdicarmine/Documents/GitHub/SeePhase Script Test Folder/prc02_19_2016___05_57_41PM.csv")
# Use this code to convert to elapsed time, in minutes
TimeMin <- (seePhase[1] - seePhase[1,1])*24*60
colnames(TimeMin) <- paste("ElapsedMin")
seePhase2 <- cbind(T1.data, TimeMin)
ylab2 <- "Analog Temperature (C)"
par(mar = c(5,5,2,5))
with(seePhase2, plot(ElapsedMin, Ph1, type = "l", col = "red3"))
par(new = T)
with(seePhase2, plot(ElapsedMin, Analog, type = "l", axes=F, xlab=NA, ylab=NA, cex=1.2))
axis(side = 4)
mtext(side = 4, line = 3, ylab2)
seePhase <- read.csv("C:/Users/pdicarmine/Documents/GitHub/SeePhase Script Test Folder/prc02_19_2016___05_57_41PM.csv")
# Use this code to convert to elapsed time, in minutes
TimeMin <- (seePhase[1] - seePhase[1,1])*24*60
colnames(TimeMin) <- paste("ElapsedMin")
seePhase2 <- cbind(seePhase, TimeMin)
ylab2 <- "Analog Temperature (C)"
par(mar = c(5,5,2,5))
with(seePhase2, plot(TimeMin, Ph1, type = "l", col = "red3"))
par(new = T)
with(seePhase2, plot(TimeMin, Analog, type = "l", axes=F, xlab=NA, ylab=NA, cex=1.2))
axis(side = 4)
mtext(side = 4, line = 3, ylab2)
head(seePhase)
head(seePhase2)
seePhase <- read.csv("C:/Users/pdicarmine/Documents/GitHub/SeePhase Script Test Folder/prc02_19_2016___05_57_41PM.csv")
# Use this code to convert to elapsed time, in minutes
ElapsedMin.df <- (seePhase[1] - seePhase[1,1])*24*60
colnames(ElapsedMin.df) <- paste("ElapsedMin")
seePhase2 <- cbind(seePhase, ElapsedMin.df)
ylab2 <- "Analog Temperature (C)"
par(mar = c(5,5,2,5))
with(seePhase2, plot(ElapsedMin, Ph1, type = "l", col = "red3"))
par(new = T)
with(seePhase2, plot(ElapsedMin, Analog, type = "l", axes=F, xlab=NA, ylab=NA, cex=1.2))
axis(side = 4)
mtext(side = 4, line = 3, ylab2)
seePhase <- read.csv("C:/Users/pdicarmine/Documents/GitHub/SeePhase Script Test Folder/prc02_19_2016___05_57_41PM.csv")
# Use this code to convert to elapsed time, in minutes
ElapsedMin.df <- (seePhase[1] - seePhase[1,1])*24*60
colnames(ElapsedMin.df) <- paste("ElapsedMin")
seePhase2 <- cbind(seePhase, ElapsedMin.df)
xlab <- "Elapsed Time (min)"
ylab1 <- "Phase (degrees)"
ylab2 <- "Analog Temperature (C)"
par(mar = c(5,5,2,5))
with(seePhase2, plot(ElapsedMin, Ph1, type = "l", col = "red3"))
par(new = T)
with(seePhase2, plot(ElapsedMin, Analog, type = "l", axes=F, xlab=NA, ylab=NA, cex=1.2))
axis(side = 4)
mtext(side = 4, line = 3, ylab2)
ElapsedMin.df <- (seePhase[1] - seePhase[1,1])*24*60
colnames(ElapsedMin.df) <- paste("ElapsedMin")
seePhase2 <- cbind(seePhase, ElapsedMin.df)
xlab <- "Elapsed Time (min)"
ylab1 <- "Phase (degrees)"
ylab2 <- "Analog Temperature (C)"
par(mar = c(5,5,2,5))
with(seePhase2, plot(ElapsedMin, Ph1,
type = "l",
col = "red3",
xlab = xlab
ylab = ylab1))
par(new = T)
with(seePhase2, plot(ElapsedMin, Analog, type = "l", axes=F, xlab=NA, ylab=NA, cex=1.2))
axis(side = 4)
mtext(side = 4, line = 3, ylab2)
?xlab
?plot
ElapsedMin.df <- (seePhase[1] - seePhase[1,1])*24*60
colnames(ElapsedMin.df) <- paste("ElapsedMin")
seePhase2 <- cbind(seePhase, ElapsedMin.df)
xlab <- "Elapsed Time (min)"
ylab1 <- "Phase (degrees)"
ylab2 <- "Analog Temperature (C)"
par(mar = c(5,5,2,5))
with(seePhase2, plot(ElapsedMin, Ph1, type = "l", col = "red3", xlab = xlab, ylab = ylab1))
par(new = T)
with(seePhase2, plot(ElapsedMin, Analog, type = "l", axes=F, xlab=NA, ylab=NA, cex=1.2))
axis(side = 4)
mtext(side = 4, line = 3, ylab2)
# Use this code to convert to elapsed time, in minutes
ElapsedMin.df <- (seePhase[1] - seePhase[1,1])*24*60
colnames(ElapsedMin.df) <- paste("ElapsedMin")
seePhase2 <- cbind(seePhase, ElapsedMin.df)
xlab <- "Elapsed Time (min)"
ylab1 <- "Phase (degrees)"
ylab2 <- "Analog Temperature (C)"
par(mar = c(5,5,2,5))
with(seePhase2, plot(ElapsedMin, Ph1,
type = "l",
col = "red3",
xlab = xlab,
ylab = ylab1))
par(new = T)
with(seePhase2, plot(ElapsedMin, Analog, type = "l", axes=F, xlab=NA, ylab=NA, cex=1.2))
axis(side = 4)
mtext(side = 4, line = 3, ylab2)
?cex
??cex
plot.title <- "Phase and Temperature vs Time"
xlab <- "Elapsed Time (min)"
ylab1 <- "Phase (degrees)"
ylab2 <- "Analog Temperature (C)"
par(mar = c(5,5,2,5))
with(seePhase2, plot(ElapsedMin, Ph1,
type = "l",
col = "red3",
xlab = xlab,
ylab = ylab1,
main = plot.title))
par(new = T)
with(seePhase2, plot(ElapsedMin, Analog,
type = "l",
axes=F,
xlab=NA,
ylab=NA,
cex=1.2))
axis(side = 4)
mtext(side = 4, line = 3, ylab2)
source('~/GitHub/SeePhase-M/mainFunction-5.R', echo=TRUE)
setwd("~/GitHub/SeePhase-M")
source('~/GitHub/SeePhase-M/mainFunction-5.R', echo=TRUE)
source('~/GitHub/SeePhase-M/mainFunction-5.R', echo=TRUE)
source('~/GitHub/SeePhase-M/mainFunction-5.R', echo=TRUE)
# Plot the data as a function of time
### Still need to add temperature series to the time.series
### Should be able to do this with aggregate(), but need seePhase and VDS data in one df
time.series <- aggregate(Ph2 ~ elapsedTimeSec, data = seePhase2, sum)
plotId <- paste(name.seePhase.phase, "vs Time with Temperature Series")
#plot(time.series, type = 'l')
time.series.plot <- ggplot(time.series, aes(elapsedTimeSec, Ph1)) +
geom_line() +
ggtitle(plotId) + xlab('Time') + ylab(name.seePhase.phase)
print(time.series.plot)
ggplotname <- paste0(tPath,"plot_DataVsTime.png")
ggsave(file=ggplotname)
# Plot the data as a function of time
### Still need to add temperature series to the time.series
### Should be able to do this with aggregate(), but need seePhase and VDS data in one df
time.series <- aggregate(Ph2 ~ elapsedTimeSec, data = seePhase2, sum)
plotId <- paste(name.seePhase.phase, "vs Time with Temperature Series")
#plot(time.series, type = 'l')
time.series.plot <- ggplot(time.series, aes(elapsedTimeSec, Ph2)) +
geom_line() +
ggtitle(plotId) + xlab('Time') + ylab(name.seePhase.phase)
print(time.series.plot)
ggplotname <- paste0(tPath,"plot_DataVsTime.png")
ggsave(file=ggplotname)
time.series <- aggregate(Ph2 ~ elapsedTimeSec + Analog, data = seePhase2, sum)
time.series
head(time.series)
time.series <- aggregate(Ph2 ~ elapsedTimeSec, data = seePhase2, sum)
head(time.series)
time.series <- aggregate(Ph2 ~ elapsedTimeSec + Analog, data = seePhase2, sum)
head(time.series)
# Plot the data as a function of time
### Still need to add temperature series to the time.series
### Should be able to do this with aggregate(), but need seePhase and VDS data in one df
time.series <- aggregate(Ph2 ~ elapsedTimeSec + Analog, data = seePhase2, sum)
plotId <- paste(name.seePhase.phase, "vs Time with Temperature Series")
#plot(time.series, type = 'l')
time.series.plot <- ggplot(time.series, aes(elapsedTimeSec, Ph2)) +
geom_line() +
ggtitle(plotId) + xlab('Time') + ylab(name.seePhase.phase)
print(time.series.plot)
ggplotname <- paste0(tPath,"plot_DataVsTime.png")
ggsave(file=ggplotname)
# Plot the data as a function of time
### Still need to add temperature series to the time.series
### Should be able to do this with aggregate(), but need seePhase and VDS data in one df
time.series <- aggregate(Ph2 ~ elapsedTimeSec + Analog, data = seePhase2, sum)
plotId <- paste(name.seePhase.phase, "vs Time with Temperature Series")
#plot(time.series, type = 'l')
time.series.plot <- ggplot(time.series, aes(elapsedTimeSec, Ph2)) +
geom_line(colour = "red") +
ggtitle(plotId) + xlab('Time') + ylab(name.seePhase.phase)
print(time.series.plot)
ggplotname <- paste0(tPath,"plot_DataVsTime.png")
ggsave(file=ggplotname)
# Plot the data as a function of time
### Still need to add temperature series to the time.series
### Should be able to do this with aggregate(), but need seePhase and VDS data in one df
time.series <- aggregate(Ph2 ~ elapsedTimeSec + Analog, data = seePhase2, sum)
plotId <- paste(name.seePhase.phase, "vs Time with Temperature Series")
#plot(time.series, type = 'l')
time.series.plot <- ggplot(time.series, aes(elapsedTimeSec, Ph2)) +
geom_line(colour = Analog) +
ggtitle(plotId) + xlab('Time') + ylab(name.seePhase.phase)
print(time.series.plot)
ggplotname <- paste0(tPath,"plot_DataVsTime.png")
ggsave(file=ggplotname)
# Plot the data as a function of time
### Still need to add temperature series to the time.series
### Should be able to do this with aggregate(), but need seePhase and VDS data in one df
time.series <- aggregate(Ph2 ~ elapsedTimeSec + Analog, data = seePhase2, sum)
plotId <- paste(name.seePhase.phase, "vs Time with Temperature Series")
#plot(time.series, type = 'l')
time.series.plot <- ggplot(time.series, aes(elapsedTimeSec, Ph2)) +
geom_line(aes(colour = Analog)) +
ggtitle(plotId) + xlab('Time') + ylab(name.seePhase.phase)
print(time.series.plot)
ggplotname <- paste0(tPath,"plot_DataVsTime.png")
ggsave(file=ggplotname)
# Plot the data as a function of time
### Still need to add temperature series to the time.series
### Should be able to do this with aggregate(), but need seePhase and VDS data in one df
time.series <- aggregate(Ph2 ~ elapsedTimeSec + Analog, data = seePhase2, sum)
plotId <- paste(name.seePhase.phase, "vs Time with Temperature Series")
#plot(time.series, type = 'l')
time.series.plot <- ggplot(time.series, aes(elapsedTimeSec, Ph2)) +
geom_line(aes(colour = Analog)) +
scale_colour_gradient(limits=c(3, 34), low="blue", high = "red") +
ggtitle(plotId) + xlab('Time') + ylab(name.seePhase.phase)
print(time.series.plot)
ggplotname <- paste0(tPath,"plot_DataVsTime.png")
ggsave(file=ggplotname)
head(seePhase2)
