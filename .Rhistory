mtext("Time (minutes)", side = 1, line = 3)
par(new = FALSE)
#reset to one graph per page
par(mfcol = c(1, 1))
for(n in sensors){
line.colour = paste("lightskyblue", n, sep = "")
par(col.axis = "black", col.lab = "black", cex = 1.3, cex.axis = 1.3, cex.lab = 1.3, mar=c(4,5,2,5)+0.1) # mar is margin lines c(bottom, left, top, right)
plot(sensor.cal$minutes, phase[[n]], main = sensor.compare.title, type = "l", lwd = 3, col = line.colour, ylim = ylim.phase, xlab = "Time (minutes)", ylab = "Phase (degrees)")
axis(2, col = "black", lwd = 3)
box(lwd = 3) #line width of the box framing the graph
par(new = TRUE)
}
par(new = FALSE)
# reset the original parameters
#par(original.par)
#turn off the png device so that the graphic file can be opened without closing R
#dev.off()
###################################
#legend("bottomright", col = c("black", "red"), lty = 1, legend = c("Phase", "Amplitude"))
# set the file type, file name, and size (pdf is best for printing because it is vector and will scale nicely, but use png() for web graphics, word may work better with png)
#png(file="mygraphic.png",width=400,height=350,res=72)
#pdf(file="mygraphic8.pdf", 7, 10)
# load the data file
sensor.cal <- read.csv("S:/R&D Docs/R&D Shared/3250 NASA NIOGS II/Data/PATCHCAL01/PATCHCAL01_151216T01/prc12_16_2015___02_05_51PM.csv")
# set the titles for your graphs:
sensor.phase.amplitude.title = "O2 Sensors"
sensor.compare.title = "O2 Sensors"
# Time, X, is measured in days, and fractions thereof, since Jan 1, 1900
# Convert time to minutes since the start of the experiment, and save as a column in the dataframe
sensor.cal$minutes <- (sensor.cal$X - 42354.587398) * 24 * 60
# I want a 4 x 1 panel of graphs each with phase on left, mag on right
original.par <- par() # first save the original graph parameters
# Set a list of column headers to be looped over
phase <- list(sensor.cal$Ph1, sensor.cal$Ph2, sensor.cal$Ph3, sensor.cal$Ph4)
phase.all.values <- c(sensor.cal$Ph1, sensor.cal$Ph2, sensor.cal$Ph3, sensor.cal$Ph4)
magnitude <- list(sensor.cal$Mag1, sensor.cal$Mag2, sensor.cal$Mag3, sensor.cal$Mag4)
magnitude.all.values <- c(sensor.cal$Mag1, sensor.cal$Mag2, sensor.cal$Mag3, sensor.cal$Mag4)
sensors <- c(1, 2, 3, 4)
ylim.phase <- c(min(phase.all.values), max(phase.all.values))
ylim.magnitude <- c(min(magnitude.all.values), max(magnitude.all.values))
#set the grid for the graphs to be displayed and other parameters
par(mfcol = c(4, 1))
#plot the graphs using a loop to plot data from all 4 sensors
mtext(sensor.phase.amplitude.title, side = 3, line = 21.8)
for(n in sensors){
par(col.axis = "black", col.lab = "black", cex = 1, cex.axis = 1, cex.lab = 1, mar=c(4,5,2,5)+0.1) # mar is margin lines c(bottom, left, top, right)
plot(sensor.cal$minutes, phase[[n]], type = "l", lwd = 3, cex = 5, col = "black", ylim = ylim.phase, xlab = "", ylab = "Phase (degrees)")
axis(2, col = "black", lwd = 3)
box(lwd = 3)
par(new = TRUE)
plot(sensor.cal$minutes, magnitude[[n]], type = "l", lwd = 3, col = "red", ylim = ylim.magnitude, col.lab = "red", xaxt = "n", yaxt = "n", xlab = "", ylab = "")
par(col.axis = "red")
axis(4, col = "red", lwd = 3)
mtext("Amplitude", side = 4, line = 3, col = "red")
}
mtext(sensor.phase.amplitude.title, side = 3, line = 21.8)
mtext("Time (minutes)", side = 1, line = 3)
par(new = FALSE)
#reset to one graph per page
par(mfcol = c(1, 1))
for(n in sensors){
line.colour = paste("lightskyblue", n, sep = "")
par(col.axis = "black", col.lab = "black", cex = 1.3, cex.axis = 1.3, cex.lab = 1.3, mar=c(4,5,2,5)+0.1) # mar is margin lines c(bottom, left, top, right)
plot(sensor.cal$minutes, phase[[n]], main = sensor.compare.title, type = "l", lwd = 3, col = line.colour, ylim = ylim.phase, xlab = "Time (minutes)", ylab = "Phase (degrees)")
axis(2, col = "black", lwd = 3)
box(lwd = 3) #line width of the box framing the graph
par(new = TRUE)
}
par(new = FALSE)
# reset the original parameters
#par(original.par)
#turn off the png device so that the graphic file can be opened without closing R
#dev.off()
###################################
#legend("bottomright", col = c("black", "red"), lty = 1, legend = c("Phase", "Amplitude"))
?plot
# set the file type, file name, and size (pdf is best for printing because it is vector and will scale nicely, but use png() for web graphics, word may work better with png)
#png(file="mygraphic.png",width=400,height=350,res=72)
#pdf(file="mygraphic8.pdf", 7, 10)
# load the data file
sensor.cal <- read.csv("S:/R&D Docs/R&D Shared/3250 NASA NIOGS II/Data/PATCHCAL01/PATCHCAL01_151216T01/prc12_16_2015___02_05_51PM.csv")
# set the titles for your graphs:
sensor.phase.amplitude.title <- "O2 Sensors" #This part needs to be fixed
sensor.compare.title <- "O2 Sensors" #Enter the type of sensor, or main title for the plot
sensor.names <- "3250SEN01_151214DB01(-1, -2, -3, -4)" #Enter the sensor identifiers
# Time, X, is measured in days, and fractions thereof, since Jan 1, 1900
# Convert time to minutes since the start of the experiment, and save as a column in the dataframe
sensor.cal$minutes <- (sensor.cal$X - 42354.587398) * 24 * 60
# I want a 4 x 1 panel of graphs each with phase on left, mag on right
original.par <- par() # first save the original graph parameters
# Set a list of column headers to be looped over
phase <- list(sensor.cal$Ph1, sensor.cal$Ph2, sensor.cal$Ph3, sensor.cal$Ph4)
phase.all.values <- c(sensor.cal$Ph1, sensor.cal$Ph2, sensor.cal$Ph3, sensor.cal$Ph4)
magnitude <- list(sensor.cal$Mag1, sensor.cal$Mag2, sensor.cal$Mag3, sensor.cal$Mag4)
magnitude.all.values <- c(sensor.cal$Mag1, sensor.cal$Mag2, sensor.cal$Mag3, sensor.cal$Mag4)
sensors <- c(1, 2, 3, 4)
ylim.phase <- c(min(phase.all.values), max(phase.all.values))
ylim.magnitude <- c(min(magnitude.all.values), max(magnitude.all.values))
#set the grid for the graphs to be displayed and other parameters
par(mfcol = c(4, 1))
#plot the graphs using a loop to plot data from all 4 sensors
mtext(sensor.phase.amplitude.title, side = 3, line = 21.8)
for(n in sensors){
par(col.axis = "black", col.lab = "black", cex = 1, cex.axis = 1, cex.lab = 1, mar=c(4,5,2,5)+0.1) # mar is margin lines c(bottom, left, top, right)
plot(sensor.cal$minutes, phase[[n]], type = "l", lwd = 3, cex = 5, col = "black", ylim = ylim.phase, xlab = "", ylab = "Phase (degrees)")
axis(2, col = "black", lwd = 3)
box(lwd = 3)
par(new = TRUE)
plot(sensor.cal$minutes, magnitude[[n]], type = "l", lwd = 3, col = "red", ylim = ylim.magnitude, col.lab = "red", xaxt = "n", yaxt = "n", xlab = "", ylab = "")
par(col.axis = "red")
axis(4, col = "red", lwd = 3)
mtext("Amplitude", side = 4, line = 3, col = "red")
}
mtext(sensor.phase.amplitude.title, side = 3, line = 21.8)
mtext("Time (minutes)", side = 1, line = 3)
par(new = FALSE)
#reset to one graph per page
par(mfcol = c(1, 1))
for(n in sensors){
line.colour = paste("lightskyblue", n, sep = "")
par(col.axis = "black", col.lab = "black", cex = 1.3, cex.axis = 1.3, cex.lab = 1.3, mar=c(4,5,2,5)+0.1) # mar is margin lines c(bottom, left, top, right)
plot(sensor.cal$minutes, phase[[n]], main = sensor.compare.title, sub = sensor.names, type = "l", lwd = 3, col = line.colour, ylim = ylim.phase, xlab = "Time (minutes)", ylab = "Phase (degrees)")
axis(2, col = "black", lwd = 3)
box(lwd = 3) #line width of the box framing the graph
par(new = TRUE)
}
par(new = FALSE)
# reset the original parameters
#par(original.par)
#turn off the png device so that the graphic file can be opened without closing R
#dev.off()
###################################
#legend("bottomright", col = c("black", "red"), lty = 1, legend = c("Phase", "Amplitude"))
par(mfcol = c(1, 1))
for(n in sensors){
line.colour = paste("lightskyblue", n, sep = "")
par(col.axis = "black", col.lab = "black", cex = 1.3, cex.axis = 1.3, cex.lab = 1.3, mar=c(4,5,2,5)+0.1) # mar is margin lines c(bottom, left, top, right)
plot(sensor.cal$minutes, phase[[n]], main = sensor.compare.title, sub = sensor.names, type = "l", lwd = 3, col = line.colour, ylim = ylim.phase, xlab = "Time (minutes)", ylab = "Phase (degrees)")
axis(2, col = "black", lwd = 3)
box(lwd = 3) #line width of the box framing the graph
par(new = TRUE)
}
par(new = FALSE)
x <- c(1:5)
y <- c(1:10, 2)
plot(x, y, main = "Title", sub = "Sub title")
length(x)
lenght(y)
length(y)
y
x <- c(1:5)
y <- c(6:10)
plot(x, y, main = "Title", sub = "Sub title")
?plot
# set the file type, file name, and size (pdf is best for printing because it is vector and will scale nicely, but use png() for web graphics, word may work better with png)
#png(file="mygraphic.png",width=400,height=350,res=72)
#pdf(file="mygraphic8.pdf", 7, 10)
# load the data file
sensor.cal <- read.csv("S:/R&D Docs/R&D Shared/3250 NASA NIOGS II/Data/PATCHCAL01/PATCHCAL01_151216T01/prc12_16_2015___02_05_51PM.csv")
# set the titles for your graphs:
sensor.phase.amplitude.title <- "O2 Sensors" #This part needs to be fixed
sensor.compare.title <- "O2 Sensors 3250SEN01_151214DB01(-1, -2, -3, -4)" #Enter the type of sensor, or main title for the plot
sensor.names <- "3250SEN01_151214DB01(-1, -2, -3, -4)" #Enter the sensor identifiers...sub title not working at the moment
# Time, X, is measured in days, and fractions thereof, since Jan 1, 1900
# Convert time to minutes since the start of the experiment, and save as a column in the dataframe
sensor.cal$minutes <- (sensor.cal$X - 42354.587398) * 24 * 60
# I want a 4 x 1 panel of graphs each with phase on left, mag on right
original.par <- par() # first save the original graph parameters
# Set a list of column headers to be looped over
phase <- list(sensor.cal$Ph1, sensor.cal$Ph2, sensor.cal$Ph3, sensor.cal$Ph4)
phase.all.values <- c(sensor.cal$Ph1, sensor.cal$Ph2, sensor.cal$Ph3, sensor.cal$Ph4)
magnitude <- list(sensor.cal$Mag1, sensor.cal$Mag2, sensor.cal$Mag3, sensor.cal$Mag4)
magnitude.all.values <- c(sensor.cal$Mag1, sensor.cal$Mag2, sensor.cal$Mag3, sensor.cal$Mag4)
sensors <- c(1, 2, 3, 4)
ylim.phase <- c(min(phase.all.values), max(phase.all.values))
ylim.magnitude <- c(min(magnitude.all.values), max(magnitude.all.values))
#set the grid for the graphs to be displayed and other parameters
par(mfcol = c(4, 1))
#plot the graphs using a loop to plot data from all 4 sensors
mtext(sensor.phase.amplitude.title, side = 3, line = 21.8)
for(n in sensors){
par(col.axis = "black", col.lab = "black", cex = 1, cex.axis = 1, cex.lab = 1, mar=c(4,5,2,5)+0.1) # mar is margin lines c(bottom, left, top, right)
plot(sensor.cal$minutes, phase[[n]], type = "l", lwd = 3, cex = 5, col = "black", ylim = ylim.phase, xlab = "", ylab = "Phase (degrees)")
axis(2, col = "black", lwd = 3)
box(lwd = 3)
par(new = TRUE)
plot(sensor.cal$minutes, magnitude[[n]], type = "l", lwd = 3, col = "red", ylim = ylim.magnitude, col.lab = "red", xaxt = "n", yaxt = "n", xlab = "", ylab = "")
par(col.axis = "red")
axis(4, col = "red", lwd = 3)
mtext("Amplitude", side = 4, line = 3, col = "red")
}
mtext(sensor.phase.amplitude.title, side = 3, line = 21.8)
mtext("Time (minutes)", side = 1, line = 3)
par(new = FALSE)
#reset to one graph per page
par(mfcol = c(1, 1))
for(n in sensors){
line.colour = paste("lightskyblue", n, sep = "")
par(col.axis = "black", col.lab = "black", cex = 1.3, cex.axis = 1.3, cex.lab = 1.3, mar=c(4,5,2,5)+0.1) # mar is margin lines c(bottom, left, top, right)
plot(sensor.cal$minutes, phase[[n]], main = sensor.compare.title, sub = sensor.names, type = "l", lwd = 3, col = line.colour, ylim = ylim.phase, xlab = "Time (minutes)", ylab = "Phase (degrees)")
axis(2, col = "black", lwd = 3)
box(lwd = 3) #line width of the box framing the graph
par(new = TRUE)
}
par(new = FALSE)
# reset the original parameters
#par(original.par)
#turn off the png device so that the graphic file can be opened without closing R
#dev.off()
###################################
#legend("bottomright", col = c("black", "red"), lty = 1, legend = c("Phase", "Amplitude"))
# set the file type, file name, and size (pdf is best for printing because it is vector and will scale nicely, but use png() for web graphics, word may work better with png)
#png(file="mygraphic.png",width=400,height=350,res=72)
#pdf(file="mygraphic8.pdf", 7, 10)
# load the data file
sensor.cal <- read.csv("S:/R&D Docs/R&D Shared/3250 NASA NIOGS II/Data/PATCHCAL01/PATCHCAL01_151216T01/prc12_16_2015___02_05_51PM.csv")
# set the titles for your graphs:
sensor.title <- "O2 Sensors: 3250SEN01_151214DB01(-1, -2, -3, -4)" #Enter the type of sensor, or main title for the plot
sensor.names <- "3250SEN01_151214DB01(-1, -2, -3, -4)" #Enter the sensor identifiers...sub title not working at the moment
# Time, X, is measured in days, and fractions thereof, since Jan 1, 1900
# Convert time to minutes since the start of the experiment, and save as a column in the dataframe
sensor.cal$minutes <- (sensor.cal$X - 42354.587398) * 24 * 60
# I want a 4 x 1 panel of graphs each with phase on left, mag on right
original.par <- par() # first save the original graph parameters
# Set a list of column headers to be looped over
phase <- list(sensor.cal$Ph1, sensor.cal$Ph2, sensor.cal$Ph3, sensor.cal$Ph4)
phase.all.values <- c(sensor.cal$Ph1, sensor.cal$Ph2, sensor.cal$Ph3, sensor.cal$Ph4)
magnitude <- list(sensor.cal$Mag1, sensor.cal$Mag2, sensor.cal$Mag3, sensor.cal$Mag4)
magnitude.all.values <- c(sensor.cal$Mag1, sensor.cal$Mag2, sensor.cal$Mag3, sensor.cal$Mag4)
sensors <- c(1, 2, 3, 4)
ylim.phase <- c(min(phase.all.values), max(phase.all.values))
ylim.magnitude <- c(min(magnitude.all.values), max(magnitude.all.values))
#set the grid for the graphs to be displayed and other parameters
par(mfcol = c(4, 1))
#plot the graphs using a loop to plot data from all 4 sensors
mtext(sensor.phase.amplitude.title, side = 3, line = 21.8)
for(n in sensors){
par(col.axis = "black", col.lab = "black", cex = 1, cex.axis = 1, cex.lab = 1, mar=c(4,5,2,5)+0.1) # mar is margin lines c(bottom, left, top, right)
plot(sensor.cal$minutes, phase[[n]], type = "l", lwd = 3, cex = 5, col = "black", ylim = ylim.phase, xlab = "", ylab = "Phase (degrees)")
axis(2, col = "black", lwd = 3)
box(lwd = 3)
par(new = TRUE)
plot(sensor.cal$minutes, magnitude[[n]], type = "l", lwd = 3, col = "red", ylim = ylim.magnitude, col.lab = "red", xaxt = "n", yaxt = "n", xlab = "", ylab = "")
par(col.axis = "red")
axis(4, col = "red", lwd = 3)
mtext("Amplitude", side = 4, line = 3, col = "red")
}
mtext(sensor.title, side = 3, line = 21.8)
mtext("Time (minutes)", side = 1, line = 3)
par(new = FALSE)
#reset to one graph per page
par(mfcol = c(1, 1))
for(n in sensors){
line.colour = paste("lightskyblue", n, sep = "")
par(col.axis = "black", col.lab = "black", cex = 1.3, cex.axis = 1.3, cex.lab = 1.3, mar=c(4,5,2,5)+0.1) # mar is margin lines c(bottom, left, top, right)
plot(sensor.cal$minutes, phase[[n]], main = sensor.title, sub = sensor.names, type = "l", lwd = 3, col = line.colour, ylim = ylim.phase, xlab = "Time (minutes)", ylab = "Phase (degrees)")
axis(2, col = "black", lwd = 3)
box(lwd = 3) #line width of the box framing the graph
par(new = TRUE)
}
par(new = FALSE)
# reset the original parameters
#par(original.par)
#turn off the png device so that the graphic file can be opened without closing R
#dev.off()
###################################
#legend("bottomright", col = c("black", "red"), lty = 1, legend = c("Phase", "Amplitude"))
# set the file type, file name, and size (pdf is best for printing because it is vector and will scale nicely, but use png() for web graphics, word may work better with png)
#png(file="mygraphic.png",width=400,height=350,res=72)
pdf(file="mygraphic8.pdf", 7, 10)
# load the data file
sensor.cal <- read.csv("S:/R&D Docs/R&D Shared/3250 NASA NIOGS II/Data/PATCHCAL01/PATCHCAL01_151216T01/prc12_16_2015___02_05_51PM.csv")
# set the titles for your graphs:
sensor.title <- "O2 Sensors: 3250SEN01_151214DB01(-1, -2, -3, -4)" #Enter the type of sensor, or main title for the plot
sensor.names <- "3250SEN01_151214DB01(-1, -2, -3, -4)" #Enter the sensor identifiers...sub title not working at the moment
# Time, X, is measured in days, and fractions thereof, since Jan 1, 1900
# Convert time to minutes since the start of the experiment, and save as a column in the dataframe
sensor.cal$minutes <- (sensor.cal$X - 42354.587398) * 24 * 60
# I want a 4 x 1 panel of graphs each with phase on left, mag on right
original.par <- par() # first save the original graph parameters
# Set a list of column headers to be looped over
phase <- list(sensor.cal$Ph1, sensor.cal$Ph2, sensor.cal$Ph3, sensor.cal$Ph4)
phase.all.values <- c(sensor.cal$Ph1, sensor.cal$Ph2, sensor.cal$Ph3, sensor.cal$Ph4)
magnitude <- list(sensor.cal$Mag1, sensor.cal$Mag2, sensor.cal$Mag3, sensor.cal$Mag4)
magnitude.all.values <- c(sensor.cal$Mag1, sensor.cal$Mag2, sensor.cal$Mag3, sensor.cal$Mag4)
sensors <- c(1, 2, 3, 4)
ylim.phase <- c(min(phase.all.values), max(phase.all.values))
ylim.magnitude <- c(min(magnitude.all.values), max(magnitude.all.values))
#set the grid for the graphs to be displayed and other parameters
par(mfcol = c(4, 1))
#plot the graphs using a loop to plot data from all 4 sensors
mtext(sensor.phase.amplitude.title, side = 3, line = 21.8)
for(n in sensors){
par(col.axis = "black", col.lab = "black", cex = 1, cex.axis = 1, cex.lab = 1, mar=c(4,5,2,5)+0.1) # mar is margin lines c(bottom, left, top, right)
plot(sensor.cal$minutes, phase[[n]], type = "l", lwd = 3, cex = 5, col = "black", ylim = ylim.phase, xlab = "", ylab = "Phase (degrees)")
axis(2, col = "black", lwd = 3)
box(lwd = 3)
par(new = TRUE)
plot(sensor.cal$minutes, magnitude[[n]], type = "l", lwd = 3, col = "red", ylim = ylim.magnitude, col.lab = "red", xaxt = "n", yaxt = "n", xlab = "", ylab = "")
par(col.axis = "red")
axis(4, col = "red", lwd = 3)
mtext("Amplitude", side = 4, line = 3, col = "red")
}
mtext(sensor.title, side = 3, line = 21.8)
mtext("Time (minutes)", side = 1, line = 3)
par(new = FALSE)
#reset to one graph per page
par(mfcol = c(1, 1))
for(n in sensors){
line.colour = paste("lightskyblue", n, sep = "")
par(col.axis = "black", col.lab = "black", cex = 1.3, cex.axis = 1.3, cex.lab = 1.3, mar=c(4,5,2,5)+0.1) # mar is margin lines c(bottom, left, top, right)
plot(sensor.cal$minutes, phase[[n]], main = sensor.title, sub = sensor.names, type = "l", lwd = 3, col = line.colour, ylim = ylim.phase, xlab = "Time (minutes)", ylab = "Phase (degrees)")
axis(2, col = "black", lwd = 3)
box(lwd = 3) #line width of the box framing the graph
par(new = TRUE)
}
par(new = FALSE)
# reset the original parameters
par(original.par)
#turn off the png device so that the graphic file can be opened without closing R
dev.off()
###################################
#legend("bottomright", col = c("black", "red"), lty = 1, legend = c("Phase", "Amplitude"))
# set the file type, file name, and size (pdf is best for printing because it is vector and will scale nicely, but use png() for web graphics, word may work better with png)
#png(file="mygraphic.png",width=400,height=350,res=72)
pdf(file="mygraphic8.pdf", 7, 10)
# load the data file
sensor.cal <- read.csv("S:/R&D Docs/R&D Shared/3250 NASA NIOGS II/Data/PATCHCAL01/PATCHCAL01_151216T01/prc12_16_2015___02_05_51PM.csv")
# set the titles for your graphs:
sensor.title <- "O2 Sensors: 3250SEN01_151214DB01(-1, -2, -3, -4)" #Enter the type of sensor, or main title for the plot
sensor.names <- "3250SEN01_151214DB01(-1, -2, -3, -4)" #Enter the sensor identifiers...sub title not working at the moment
# Time, X, is measured in days, and fractions thereof, since Jan 1, 1900
# Convert time to minutes since the start of the experiment, and save as a column in the dataframe
sensor.cal$minutes <- (sensor.cal$X - 42354.587398) * 24 * 60
# I want a 4 x 1 panel of graphs each with phase on left, mag on right
original.par <- par() # first save the original graph parameters
# Set a list of column headers to be looped over
phase <- list(sensor.cal$Ph1, sensor.cal$Ph2, sensor.cal$Ph3, sensor.cal$Ph4)
phase.all.values <- c(sensor.cal$Ph1, sensor.cal$Ph2, sensor.cal$Ph3, sensor.cal$Ph4)
magnitude <- list(sensor.cal$Mag1, sensor.cal$Mag2, sensor.cal$Mag3, sensor.cal$Mag4)
magnitude.all.values <- c(sensor.cal$Mag1, sensor.cal$Mag2, sensor.cal$Mag3, sensor.cal$Mag4)
sensors <- c(1, 2, 3, 4)
ylim.phase <- c(min(phase.all.values), max(phase.all.values))
ylim.magnitude <- c(min(magnitude.all.values), max(magnitude.all.values))
#set the grid for the graphs to be displayed and other parameters
par(mfcol = c(4, 1))
#plot the graphs using a loop to plot data from all 4 sensors
mtext(sensor.phase.amplitude.title, side = 3, line = 21.8)
for(n in sensors){
par(col.axis = "black", col.lab = "black", cex = 1, cex.axis = 1, cex.lab = 1, mar=c(4,5,2,5)+0.1) # mar is margin lines c(bottom, left, top, right)
plot(sensor.cal$minutes, phase[[n]], type = "l", lwd = 3, cex = 5, col = "black", ylim = ylim.phase, xlab = "", ylab = "Phase (degrees)")
axis(2, col = "black", lwd = 3)
box(lwd = 3)
par(new = TRUE)
plot(sensor.cal$minutes, magnitude[[n]], type = "l", lwd = 3, col = "red", ylim = ylim.magnitude, col.lab = "red", xaxt = "n", yaxt = "n", xlab = "", ylab = "")
par(col.axis = "red")
axis(4, col = "red", lwd = 3)
mtext("Amplitude", side = 4, line = 3, col = "red")
}
mtext(sensor.title, side = 3, line = 21.8)
mtext("Time (minutes)", side = 1, line = 3)
par(new = FALSE)
dev.off()
pdf(file="mygraphic8.pdf", 5, 5)
#reset to one graph per page
par(mfcol = c(1, 1))
for(n in sensors){
line.colour = paste("lightskyblue", n, sep = "")
par(col.axis = "black", col.lab = "black", cex = 1.3, cex.axis = 1.3, cex.lab = 1.3, mar=c(4,5,2,5)+0.1) # mar is margin lines c(bottom, left, top, right)
plot(sensor.cal$minutes, phase[[n]], main = sensor.title, sub = sensor.names, type = "l", lwd = 3, col = line.colour, ylim = ylim.phase, xlab = "Time (minutes)", ylab = "Phase (degrees)")
axis(2, col = "black", lwd = 3)
box(lwd = 3) #line width of the box framing the graph
par(new = TRUE)
}
par(new = FALSE)
# reset the original parameters
par(original.par)
#turn off the png device so that the graphic file can be opened without closing R
dev.off()
###################################
#legend("bottomright", col = c("black", "red"), lty = 1, legend = c("Phase", "Amplitude"))
# set the file type, file name, and size (pdf is best for printing because it is vector and will scale nicely, but use png() for web graphics, word may work better with png)
#png(file="mygraphic.png",width=400,height=350,res=72)
pdf(file="mygraphic9.pdf", 7, 10)
# load the data file
sensor.cal <- read.csv("S:/R&D Docs/R&D Shared/3250 NASA NIOGS II/Data/PATCHCAL01/PATCHCAL01_151216T01/prc12_16_2015___02_05_51PM.csv")
# set the titles for your graphs:
sensor.title <- "O2 Sensors: 3250SEN01_151214DB01(-1, -2, -3, -4)" #Enter the type of sensor, or main title for the plot
sensor.names <- "3250SEN01_151214DB01(-1, -2, -3, -4)" #Enter the sensor identifiers...sub title not working at the moment
# Time, X, is measured in days, and fractions thereof, since Jan 1, 1900
# Convert time to minutes since the start of the experiment, and save as a column in the dataframe
sensor.cal$minutes <- (sensor.cal$X - 42354.587398) * 24 * 60
# I want a 4 x 1 panel of graphs each with phase on left, mag on right
original.par <- par() # first save the original graph parameters
# Set a list of column headers to be looped over
phase <- list(sensor.cal$Ph1, sensor.cal$Ph2, sensor.cal$Ph3, sensor.cal$Ph4)
phase.all.values <- c(sensor.cal$Ph1, sensor.cal$Ph2, sensor.cal$Ph3, sensor.cal$Ph4)
magnitude <- list(sensor.cal$Mag1, sensor.cal$Mag2, sensor.cal$Mag3, sensor.cal$Mag4)
magnitude.all.values <- c(sensor.cal$Mag1, sensor.cal$Mag2, sensor.cal$Mag3, sensor.cal$Mag4)
sensors <- c(1, 2, 3, 4)
ylim.phase <- c(min(phase.all.values), max(phase.all.values))
ylim.magnitude <- c(min(magnitude.all.values), max(magnitude.all.values))
#set the grid for the graphs to be displayed and other parameters
par(mfcol = c(4, 1))
#plot the graphs using a loop to plot data from all 4 sensors
mtext(sensor.phase.amplitude.title, side = 3, line = 21.8)
for(n in sensors){
par(col.axis = "black", col.lab = "black", cex = 1, cex.axis = 1, cex.lab = 1, mar=c(4,5,2,5)+0.1) # mar is margin lines c(bottom, left, top, right)
plot(sensor.cal$minutes, phase[[n]], type = "l", lwd = 3, cex = 5, col = "black", ylim = ylim.phase, xlab = "", ylab = "Phase (degrees)")
axis(2, col = "black", lwd = 3)
box(lwd = 3)
par(new = TRUE)
plot(sensor.cal$minutes, magnitude[[n]], type = "l", lwd = 3, col = "red", ylim = ylim.magnitude, col.lab = "red", xaxt = "n", yaxt = "n", xlab = "", ylab = "")
par(col.axis = "red")
axis(4, col = "red", lwd = 3)
mtext("Amplitude", side = 4, line = 3, col = "red")
}
mtext(sensor.title, side = 3, line = 21.8)
mtext("Time (minutes)", side = 1, line = 3)
par(new = FALSE)
dev.off()
pdf(file="mygraphic10.pdf", 5, 5)
#reset to one graph per page
par(mfcol = c(1, 1))
for(n in sensors){
line.colour = paste("lightskyblue", n, sep = "")
par(col.axis = "black", col.lab = "black", cex = 1.3, cex.axis = 1.3, cex.lab = 1.3, mar=c(4,5,2,5)+0.1) # mar is margin lines c(bottom, left, top, right)
plot(sensor.cal$minutes, phase[[n]], main = sensor.title, sub = sensor.names, type = "l", lwd = 3, col = line.colour, ylim = ylim.phase, xlab = "Time (minutes)", ylab = "Phase (degrees)")
axis(2, col = "black", lwd = 3)
box(lwd = 3) #line width of the box framing the graph
par(new = TRUE)
}
par(new = FALSE)
# reset the original parameters
par(original.par)
#turn off the png device so that the graphic file can be opened without closing R
dev.off()
###################################
#legend("bottomright", col = c("black", "red"), lty = 1, legend = c("Phase", "Amplitude"))
# set the file type, file name, and size (pdf is best for printing because it is vector and will scale nicely, but use png() for web graphics, word may work better with png)
#png(file="mygraphic.png",width=400,height=350,res=72)
pdf(file="mygraphic11.pdf", 7, 10)
# load the data file
sensor.cal <- read.csv("S:/R&D Docs/R&D Shared/3250 NASA NIOGS II/Data/PATCHCAL01/PATCHCAL01_151216T01/prc12_16_2015___02_05_51PM.csv")
# set the titles for your graphs:
sensor.title <- "O2 Sensors: 3250SEN01_151214DB01(-1, -2, -3, -4)" #Enter the type of sensor, or main title for the plot
sensor.names <- "3250SEN01_151214DB01(-1, -2, -3, -4)" #Enter the sensor identifiers...sub title not working at the moment
# Time, X, is measured in days, and fractions thereof, since Jan 1, 1900
# Convert time to minutes since the start of the experiment, and save as a column in the dataframe
sensor.cal$minutes <- (sensor.cal$X - 42354.587398) * 24 * 60
# I want a 4 x 1 panel of graphs each with phase on left, mag on right
original.par <- par() # first save the original graph parameters
# Set a list of column headers to be looped over
phase <- list(sensor.cal$Ph1, sensor.cal$Ph2, sensor.cal$Ph3, sensor.cal$Ph4)
phase.all.values <- c(sensor.cal$Ph1, sensor.cal$Ph2, sensor.cal$Ph3, sensor.cal$Ph4)
magnitude <- list(sensor.cal$Mag1, sensor.cal$Mag2, sensor.cal$Mag3, sensor.cal$Mag4)
magnitude.all.values <- c(sensor.cal$Mag1, sensor.cal$Mag2, sensor.cal$Mag3, sensor.cal$Mag4)
sensors <- c(1, 2, 3, 4)
ylim.phase <- c(min(phase.all.values), max(phase.all.values))
ylim.magnitude <- c(min(magnitude.all.values), max(magnitude.all.values))
#set the grid for the graphs to be displayed and other parameters
par(mfcol = c(4, 1))
#plot the graphs using a loop to plot data from all 4 sensors
mtext(sensor.phase.amplitude.title, side = 3, line = 21.8)
for(n in sensors){
par(col.axis = "black", col.lab = "black", cex = 1, cex.axis = 1, cex.lab = 1, mar=c(4,5,2,5)+0.1) # mar is margin lines c(bottom, left, top, right)
plot(sensor.cal$minutes, phase[[n]], type = "l", lwd = 3, cex = 5, col = "black", ylim = ylim.phase, xlab = "", ylab = "Phase (degrees)")
axis(2, col = "black", lwd = 3)
box(lwd = 3)
par(new = TRUE)
plot(sensor.cal$minutes, magnitude[[n]], type = "l", lwd = 3, col = "red", ylim = ylim.magnitude, col.lab = "red", xaxt = "n", yaxt = "n", xlab = "", ylab = "")
par(col.axis = "red")
axis(4, col = "red", lwd = 3)
mtext("Amplitude", side = 4, line = 3, col = "red")
}
mtext(sensor.title, side = 3, line = 21.8)
mtext("Time (minutes)", side = 1, line = 3)
par(new = FALSE)
dev.off()
pdf(file="mygraphic12.pdf", 10, 5)
#reset to one graph per page
par(mfcol = c(1, 1))
for(n in sensors){
line.colour = paste("lightskyblue", n, sep = "")
par(col.axis = "black", col.lab = "black", cex = 1.3, cex.axis = 1.3, cex.lab = 1.3, mar=c(4,5,2,5)+0.1) # mar is margin lines c(bottom, left, top, right)
plot(sensor.cal$minutes, phase[[n]], main = sensor.title, sub = sensor.names, type = "l", lwd = 3, col = line.colour, ylim = ylim.phase, xlab = "Time (minutes)", ylab = "Phase (degrees)")
axis(2, col = "black", lwd = 3)
box(lwd = 3) #line width of the box framing the graph
par(new = TRUE)
}
par(new = FALSE)
# reset the original parameters
par(original.par)
#turn off the png device so that the graphic file can be opened without closing R
dev.off()
###################################
#legend("bottomright", col = c("black", "red"), lty = 1, legend = c("Phase", "Amplitude"))
source('~/GitHub/SeePhase-M/mainFunction.R')
setwd("~/GitHub/SeePhase-M")
source('~/GitHub/SeePhase-M/mainFunction.R')
source('~/GitHub/SeePhase-M/mainFunction.R')
source('~/GitHub/SeePhase-M/mainFunction.R')
source('~/GitHub/SeePhase-M/mainFunction.R')
source('~/GitHub/SeePhase-M/mainFunction.R')
source('~/GitHub/SeePhase-M/mainFunction.R')
source('~/GitHub/SeePhase-M/mainFunction.R')
source('~/GitHub/SeePhase-M/mainFunction.R')
n_col_name
source('~/GitHub/SeePhase-M/mainFunction.R')
source('~/GitHub/SeePhase-M/mainFunction.R')
source('~/GitHub/SeePhase-M/mainFunction.R')
source('~/GitHub/SeePhase-M/mainFunction.R')
